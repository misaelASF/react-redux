{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/dbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","item","key","id","user","content","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","Navbar","Switch","Route","path","exact","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","dbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03dd9662.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n   return (\r\n    <ul className=\"right\">\r\n    <li><NavLink to=\"/new-project\">New Project</NavLink></li>\r\n    <li><a onClick={props.signOut}>Log Out</a></li>\r\n    <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n      { props.profile.initials }\r\n    </NavLink></li>\r\n  </ul>\r\n   )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n          const firebase = getFirebase()\r\n\r\n          firebase.auth().signInWithEmailAndPassword(\r\n              credentials.email,\r\n              credentials.password\r\n          ).then(() => {\r\n               dispatch({ type: 'LOGIN_SUCESS'})\r\n          }).catch((err) => {\r\n              dispatch({ type: 'LOGIN_ERROR', err })\r\n          })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase()\r\n        \r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCESS'})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((res) => {\r\n             return firestore.collection('users').doc(res.user.uid).set({\r\n                 firstName: newUser.firstName,\r\n                 lastName: newUser.lastName,\r\n                 initials: newUser.firstName[0] + newUser.lastName[0]\r\n             })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err })\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => (\r\n    <ul className=\"right\">\r\n      <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n      <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n    </ul>\r\n);\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux'\r\n\r\nconst NavBar = (props) => {\r\n    const { auth, profile } = props\r\n   // console.log(auth)\r\n   const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                 <Link to=\"/\" className=\"brand-logo\">MarioPlan</Link>\r\n                 { links }\r\n            </div>\r\n       </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n       auth: state.firebase.auth,\r\n       profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavBar)","import React from 'react'\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props\r\n    return (\r\n        <div className=\"section\">\r\n           <div className=\"card z-depth-0\">\r\n               <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        { notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                   <span className=\"pink-text\">{item.user}</span>\r\n                                   <span>{item.content}</span>\r\n                                   \r\n                                </li>\r\n                            )\r\n                        }) }\r\n                    </ul>\r\n               </div>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n        <div className=\"card-content grey-text text-darken-3\">\r\n           <span className=\"card-title\">{project.title}</span>\r\n           <p>Posted by { project.authorFirstName } { project.authorLastName }</p>\r\n           <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n          {\r\n            projects && projects.map(project => {\r\n              return (\r\n                 <Link to={'/project/' + project.id} key={project.id} >\r\n                      <ProjectSummary project={project} />\r\n                 </Link>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React,{ Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component{\r\n    render(){\r\n        //console.log(this.props)\r\n        const { projects, auth, notifications } = this.props\r\n\r\n        if(!auth.uid) return <Redirect to=\"/signin\" />\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                   <div className=\"col s12 m6\">\r\n                     <ProjectList projects={projects} />\r\n                   </div>\r\n                   <div className=\"col s12 m5 offset-m1\">\r\n                       <Notifications notifications={notifications} />\r\n                   </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects'},\r\n        { collection: 'notifications', limit: 3}\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props\r\n\r\n    if(!auth.uid) return <Redirect to=\"/signin\" />\r\n\r\n    if(project) {\r\n      return (\r\n        <div>\r\n      <div className=\"container section project-details\">\r\n         <div className=\"card z-detph-0\">\r\n            <div className=\"card-content\">\r\n               <span className=\"card-title\">{ project.title }</span>\r\n               <p>{ project.content }</p>\r\n            </div>\r\n            <div className=\"card-action gret lighten-4 grey-text\">\r\n                <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\r\n                <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n    </div>\r\n      )\r\n    } else {\r\n      return (\r\n          <div className=\"container center\">\r\n             <p>Loading project...</p>\r\n          </div>\r\n        )\r\n    }\r\n \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  console.log(state)\r\n  const id = ownProps.match.params.id\r\n  const projects = state.firestore.data.projects\r\n  const project = projects ? projects[id] : null\r\n  return {\r\n     project: project,\r\n     auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n      { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n      this.setState({\r\n          [e.target.id]:e.target.value\r\n      })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.signIn(this.state)\r\n      }\r\n\r\n  render() {\r\n    const { authError, auth } = this.props\r\n\r\n    if(auth.uid) return <Redirect to=\"/\" />\r\n\r\n    return (\r\n      <div className=\"container\">\r\n         <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n               <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n               <div className=\"red-text center\">\r\n                 { authError ? <p>{authError}</p> : null }\r\n               </div>\r\n            </div>\r\n         </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n      this.setState({\r\n          [e.target.id]:e.target.value\r\n      })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n  render() {\r\n    const { auth, authError } = this.props\r\n    if(auth.uid) return <Redirect to=\"/\" />\r\n\r\n    return (\r\n      <div className=\"container\">\r\n         <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"firstName\">First Name</label>\r\n              <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"lastName\">Last Name</label>\r\n              <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n               <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            </div>\r\n            <div className=\"red-text center\">\r\n                { authError ? <p>{ authError }</p> : null }\r\n            </div>\r\n         </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispacthToProps  = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispacthToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n      this.setState({\r\n          [e.target.id]:e.target.value\r\n      })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n       //console.log(this.state)\r\n       this.props.createProject(this.state)\r\n       this.props.history.push('/')\r\n    }\r\n\r\n  render() {\r\n    const { auth } = this.props\r\n    if(!auth.uid) return <Redirect to=\"/signin\" />\r\n\r\n    return (\r\n      <div className=\"container\">\r\n         <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">New Project</h5>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"content\">Content</label>\r\n              <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n            </div>\r\n            <div className=\"input-field\">\r\n               <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n            </div>\r\n         </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile\r\n        const authorId = getState().firebase.auth.uid\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err })\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n          <div className=\"App\">\n              <NavBar />\n              <Switch>\n                <Route path=\"/\" exact component={Dashboard} />\n                <Route path=\"/project/:id\" component={ProjectDetails} />\n                <Route path=\"/signin\" component={SignIn} />\n                <Route path=\"/signup\" component={SignUp} />\n                <Route path=\"/new-project\" component={CreateProject} />\n              </Switch>\n           </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n     authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n     switch(action.type){\r\n          case 'LOGIN_ERROR':\r\n          console.log('login error')\r\n          return {\r\n               ...state,\r\n               authError: 'Login failed'\r\n          }\r\n          case 'LOGIN_SUCESS':\r\n          console.log('login sucess')\r\n          return {\r\n               ...state,\r\n               authError: null\r\n          }\r\n          case 'SIGNOUT_SUCESS':\r\n          console.log('signout sucess')\r\n          return state\r\n          case 'SIGNUP_SUCESS':\r\n          console.log('signup sucess')\r\n          return {\r\n            ...state,\r\n            authError: null\r\n          }\r\n          case 'SIGNUP_ERROR':\r\n          console.log('signup error')\r\n          return {\r\n               ...state,\r\n               authError: action.err.message\r\n          }\r\n          default:\r\n            return state\r\n     }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects: [\r\n        {id:1, title: 'bla bla bla', content: 'bla bla bla'},\r\n        {id:2, title: 'bla bla bla', content: 'bla bla bla'},\r\n        {id:3, title: 'bla bla bla', content: 'bla bla bla'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n     switch(action.type) {\r\n         case 'CREATE_PROJECT':\r\n           console.log('created project', action.project);\r\n           return state;\r\n         case 'CREATE_PROJECT_ERROR':\r\n            console.log('created project error', action.err);\r\n            return state;\r\n         default:\r\n            return state \r\n     }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer\r\n","  import firebase from 'firebase/app'\r\n  import 'firebase/firestore'\r\n  import 'firebase/auth'\r\n\r\n  // Initialize Firebase\r\n  var config = {\r\n    apiKey: \"AIzaSyB-YAiS8WnpffHShfXxoOOphQJ4JDLMNMs\",\r\n    authDomain: \"projeto-ninja-89da8.firebaseapp.com\",\r\n    databaseURL: \"https://projeto-ninja-89da8.firebaseio.com\",\r\n    projectId: \"projeto-ninja-89da8\",\r\n    storageBucket: \"projeto-ninja-89da8.appspot.com\",\r\n    messagingSenderId: \"364394348623\"\r\n  };\r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({ timestampsInSnapshots: true })\r\n\r\n  export default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport dbConfig from './config/dbConfig'\n\nconst store = createStore(rootReducer, \n    compose(\n            applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n            reduxFirestore(dbConfig),\n            reactReduxFirebase(dbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n          )    \n        );\n\nstore.firebaseAuthIsReady.then(() => {\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\nserviceWorker.unregister();\n})\n\n"],"sourceRoot":""}